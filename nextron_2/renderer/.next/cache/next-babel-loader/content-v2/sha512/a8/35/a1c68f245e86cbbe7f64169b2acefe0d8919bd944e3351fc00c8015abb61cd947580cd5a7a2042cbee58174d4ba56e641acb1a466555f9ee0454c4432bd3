{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"B:\\\\kaggle\\\\beansAf\\\\nextron\\\\renderer\\\\components\\\\Link.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nconst NextComposed = /*#__PURE__*/React.forwardRef(function NextComposed(props, ref) {\n  const {\n    as,\n    href\n  } = props,\n        other = _objectWithoutProperties(props, [\"as\", \"href\"]);\n\n  return /*#__PURE__*/_jsxDEV(NextLink, {\n    href: href,\n    as: as,\n    children: /*#__PURE__*/_jsxDEV(\"a\", _objectSpread({\n      ref: ref\n    }, other), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n});\n\nfunction Link(props) {\n  const {\n    href,\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked\n  } = props,\n        other = _objectWithoutProperties(props, [\"href\", \"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName\n  });\n\n  if (naked) {\n    return /*#__PURE__*/_jsxDEV(NextComposed, _objectSpread({\n      className: className,\n      ref: innerRef,\n      href: href\n    }, other), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MuiLink, _objectSpread({\n    component: NextComposed,\n    className: className,\n    ref: innerRef,\n    href: href\n  }, other), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\nexport default /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n  innerRef: ref\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 79\n}, this));","map":{"version":3,"sources":["B:/kaggle/beansAf/nextron/renderer/components/Link.tsx"],"names":["React","clsx","useRouter","NextLink","MuiLink","NextComposed","forwardRef","props","ref","as","href","other","Link","activeClassName","className","classNameProps","innerRef","naked","router","pathname"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqD,WAArD;AACA,OAAOC,OAAP,MAAmD,wBAAnD;AAIA,MAAMC,YAAY,gBAAGL,KAAK,CAACM,UAAN,CAAiB,SAASD,YAAT,CAAsBE,KAAtB,EAAgDC,GAAhD,EAAmF;AACvH,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAyBH,KAA/B;AAAA,QAAqBI,KAArB,4BAA+BJ,KAA/B;;AAEA,sBACE,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEG,IAAhB;AAAsB,IAAA,EAAE,EAAED,EAA1B;AAAA,2BACE;AAAG,MAAA,GAAG,EAAED;AAAR,OAAiBG,KAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARoB,CAArB;;AAkBA,SAASC,IAAT,CAAcL,KAAd,EAAgC;AAC9B,QAAM;AACJG,IAAAA,IADI;AAEJG,IAAAA,eAAe,GAAG,QAFd;AAGJC,IAAAA,SAAS,EAAEC,cAHP;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAOFV,KAPJ;AAAA,QAMKI,KANL,4BAOIJ,KAPJ;;AASA,QAAMW,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,QAAQ,GAAG,OAAOT,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACS,QAAxD;AACA,QAAML,SAAS,GAAGb,IAAI,CAACc,cAAD,EAAiB;AACrC,KAACF,eAAD,GAAmBK,MAAM,CAACC,QAAP,KAAoBA,QAApB,IAAgCN;AADd,GAAjB,CAAtB;;AAIA,MAAII,KAAJ,EAAW;AACT,wBAAO,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,SAAzB;AAAoC,MAAA,GAAG,EAAEE,QAAzC;AAAmD,MAAA,IAAI,EAAEN;AAAzD,OAAmEC,KAAnE;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAEN,YAApB;AAAkC,IAAA,SAAS,EAAES,SAA7C;AAAwD,IAAA,GAAG,EAAEE,QAA7D;AAAuE,IAAA,IAAI,EAAEN;AAA7E,KAAuFC,KAAvF;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AAED,4BAAeX,KAAK,CAACM,UAAN,CAA+C,CAACC,KAAD,EAAQC,GAAR,kBAAgB,QAAC,IAAD,kCAAUD,KAAV;AAAiB,EAAA,QAAQ,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,QAA/D,CAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink, { LinkProps as NextLinkProps } from 'next/link';\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\n\ntype NextComposedProps = React.AnchorHTMLAttributes<HTMLAnchorElement> & NextLinkProps;\n\nconst NextComposed = React.forwardRef(function NextComposed(props: NextComposedProps, ref: React.Ref<HTMLAnchorElement>) {\n  const { as, href, ...other } = props;\n\n  return (\n    <NextLink href={href} as={as}>\n      <a ref={ref} {...other} />\n    </NextLink>\n  );\n});\n\ninterface LinkPropsBase {\n  activeClassName?: string;\n  innerRef?: React.Ref<HTMLAnchorElement>;\n  naked?: boolean;\n}\n\ntype LinkProps = LinkPropsBase & NextComposedProps & Omit<MuiLinkProps, 'ref'>;\n\nfunction Link(props: LinkProps) {\n  const {\n    href,\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked,\n    ...other\n  } = props;\n\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName,\n  });\n\n  if (naked) {\n    return <NextComposed className={className} ref={innerRef} href={href} {...other} />;\n  }\n\n  return (\n    <MuiLink component={NextComposed} className={className} ref={innerRef} href={href} {...other} />\n  );\n}\n\nexport default React.forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => <Link {...props} innerRef={ref} />);\n"]},"metadata":{},"sourceType":"module"}